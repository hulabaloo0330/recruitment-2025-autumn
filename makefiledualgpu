# 编译器: 使用 g++
CXX = g++

# 编译标志: 添加 -fopenmp 以启用 OpenMP
CXX_CFLAGS = -w -std=c++14 -O3 -march=native -g -fopenmp

# 目录结构定义
DIR_OBJ = obj
DIR_SRC = src
DIR_INC = inc

# 源文件
CPP_SRCS = $(wildcard $(DIR_SRC)/*.cpp)

# 目标文件
OBJS = $(patsubst $(DIR_SRC)/%.cpp, $(DIR_OBJ)/%.o, $(CPP_SRCS))

# CUDA 设置
CUDA_HOME   ?= /usr/local/cuda
CUDA_LIBS    = -L$(CUDA_HOME)/lib64 -lcudart -lcublas -lcusparse
CUDA_INCLUDES= -I$(CUDA_HOME)/include

# 头文件和库路径
INCLUDES = -I./$(DIR_INC) $(CUDA_INCLUDES)
LIBS = $(CUDA_LIBS)

# 可执行文件名
PROG = gmres

# --- 编译和链接规则 ---

all: $(PROG)

# 链接规则: 注意添加 -fopenmp
$(PROG): $(OBJS)
	$(CXX) $(CXX_CFLAGS) $^ -o $@ $(LIBS)

# 编译规则
$(DIR_OBJ)/%.o: $(DIR_SRC)/%.cpp
	@mkdir -p $(DIR_OBJ)
	$(CXX) $(CXX_CFLAGS) $(INCLUDES) -c $< -o $@

.PHONY: clean
clean:
	rm -rf $(PROG) $(DIR_OBJ)

.PHONY: format
format:
	clang-format -i $(DIR_INC)/*.hpp $(DIR_SRC)/*.cpp
